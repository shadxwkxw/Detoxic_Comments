version: '3.8'

services:
  # PostgreSQL для Go-сервиса
  go_db:
    image: postgres:13-alpine
    container_name: go_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Go-сервис
  go-service:
    build:
      context: .
      dockerfile: Dockerfile.go
    container_name: go_app
    ports:
      - "3030:3030"
    env_file:
      - .env
    depends_on:
      go_db:
        condition: service_healthy

  # FastAPI сервис
  fastapi-service:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: detox_backend
    ports:
      - "5000:5000"
    environment:
      - PYTHONUNBUFFERED=1
      - TRANSFORMERS_OFFLINE=0
    volumes:
      - ./models:/app/models
      - ./backend:/app
    depends_on:
      - go_db

  # React фронтенд
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: detox_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://fastapi-service:5000
      - REACT_APP_GO_API_URL=http://go-service:3030
    depends_on:
      - fastapi-service
      - go-service

volumes:
  postgres_data: